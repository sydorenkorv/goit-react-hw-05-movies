{"version":3,"file":"static/js/544.37f72a53.chunk.js","mappings":"ySAEMA,E,QAAYC,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAINC,EAAS,mCAAG,sGACAP,EAAUQ,IAAI,wBADd,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKTC,EAAgB,mCAAG,WAAMC,GAAN,yFACPZ,EAAUQ,IAAI,gBAAiB,CACpDL,OAAQ,CAAES,MAAAA,KAFkB,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAe,mCAAG,WAAMC,GAAN,yFACNd,EAAUQ,IAAV,iBAAwBM,IADlB,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAO,mCAAG,WAAMD,GAAN,yFACEd,EAAUQ,IAAV,iBAAwBM,EAAxB,aADF,uBACbL,EADa,EACbA,KADa,kBAEdA,EAAKO,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,yFACCd,EAAUQ,IAAV,iBAAwBM,EAAxB,aADD,uBACdL,EADc,EACdA,KADc,kBAEfA,EAAKC,SAFU,2CAAH,qD,+EChCvB,EAA4B,6BAA5B,EAAqE,6BAArE,EAA+G,8B,SCGlGQ,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGC,MAAMC,QAAQN,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAWO,KAAI,YAAuC,IAApCZ,EAAmC,EAAnCA,GAAIa,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACjC,OACE,UAAC,KAAD,CACEP,UAAWC,EACXO,MAAO,CAAEC,KAAMX,GAEfY,GAAE,kBAAalB,GAJjB,WAME,gBACEmB,IAAG,yCAAoCJ,GACvCK,IAAKN,EACLO,MAAO,CAAEC,MAAO,QAElB,cAAGd,UAAWC,EAAd,SAA+BI,GAAQC,MARlCd,EAWV,MAGR,C,0HCOD,UA7BA,WACE,OAA4BuB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEapC,EAAAA,EAAAA,MAFb,OAEVqC,EAFU,OAGhBL,EAAUK,GAHM,gDAKhBH,EAAS,KAAII,SALG,yDAAH,qDAQjBF,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACM,OAAVF,GACJM,EAAAA,OAAAA,QAAA,6BAAqCN,GACtC,GAAE,CAACA,KAGF,iCACE,sCACA,SAAC,IAAD,CAAWrB,UAAWmB,MAG3B,C","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst moviesAPI = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '8bd78ee11f1297c9482ff7b548a73f20',\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getTrends = async () => {\n  const { data } = await moviesAPI.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await moviesAPI.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n    const { data } = await moviesAPI.get(`/movie/${id}/reviews`);\n    return data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieLink\":\"MovieList_movieLink__kzavH\",\"movieTitle\":\"MovieList_movieTitle__RhENm\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.movieList}>\n      {Array.isArray(movieList) &&\n        movieList?.map(({ id, name, title, poster_path }) => {\n          return (\n            <Link\n              className={css.movieLink}\n              state={{ from: location }}\n              key={id}\n              to={`/movies/${id}`}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                style={{ width: 200 }}\n              />\n              <p className={css.movieTitle}>{name || title}</p>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getTrends } from 'api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Notify } from 'notiflix';\n\nfunction Home() {\n  const [trends, setTrends] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        const receivedTrends = await getTrends();\n        setTrends(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchTrends();\n  }, []);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`some error occured ${error}`);\n  }, [error]);\n\n  return (\n    <>\n      <h1>Trending</h1>\n      <MovieList movieList={trends} />\n    </>\n  );\n}\n\nexport default Home;\n"],"names":["moviesAPI","axios","baseURL","params","api_key","language","include_adult","getTrends","get","data","results","getMoviesByQuery","query","getMovieDetails","id","getCast","cast","getReviews","MovieList","movieList","location","useLocation","className","css","Array","isArray","map","name","title","poster_path","state","from","to","src","alt","style","width","useState","trends","setTrends","error","setError","useEffect","fetchTrends","receivedTrends","message","Notify"],"sourceRoot":""}