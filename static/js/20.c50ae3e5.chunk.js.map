{"version":3,"file":"static/js/20.c50ae3e5.chunk.js","mappings":"gRACA,EAAuB,sBAAvB,EAAuD,yB,SCsDvD,MAhDA,WACE,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,WAAMC,GAAN,uFAEjBP,GAAa,GAFI,UAGYQ,EAAAA,EAAAA,IAAWD,GAHvB,OAGXE,EAHW,OAIjBX,EAAgBW,GAJC,gDAMjBP,EAAS,KAAIQ,SANI,yBAQjBV,GAAa,GARI,4EAAH,sDAWlBM,EAAaH,EAZO,CAarB,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACM,OAAVJ,GACJU,EAAAA,OAAAA,QAAA,6BAAqCV,GACtC,GAAE,CAACA,KAGF,gCACGF,IAAa,SAACa,EAAA,EAAD,KACd,eAAIC,UAAWC,EAAf,SACGC,MAAMC,QAAQnB,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAcoB,KAAI,SAAAC,GAChB,OACE,2BACE,+BAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAIC,UACT,8BAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAIE,YAFDF,EAAGX,GAKf,OAEoB,IAAxBV,EAAawB,SACZ,eAAIR,UAAWC,EAAf,mDAIP,C","sources":["webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"message\":\"Reviews_message__u6VQW\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Notify } from 'notiflix';\nimport { getReviews } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nfunction Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async id => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await getReviews(id);\n        setMovieReviews(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`some error occured ${error}`);\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul className={css.list}>\n        {Array.isArray(movieReviews) &&\n          movieReviews?.map(el => {\n            return (\n              <li key={el.id}>\n                <h3>{el?.author}</h3>\n                <p>{el?.content}</p>\n              </li>\n            );\n          })}\n      </ul>\n      {movieReviews.length === 0 && (\n        <h4 className={css.message}>There are no reviews for this movie</h4>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;"],"names":["useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviews","id","getReviews","receivedTrends","message","Notify","Loader","className","css","Array","isArray","map","el","author","content","length"],"sourceRoot":""}